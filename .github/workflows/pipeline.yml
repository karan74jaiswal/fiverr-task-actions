# name: Deploy to EKS
# on:
#   push:
#     branches:
#       - master
# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Configure AWS credentials
#         env:
#           AWS_ACCESS_KEY_ID: AKIAQ5ZFAJFAJ66PXGU2
#           AWS_SECRET_ACCESS_KEY: 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
#           AWS_DEFAULT_REGION: us-west-2
#         run: |
#           aws eks update-kubeconfig --name eks-cluster-test --region us-west-2
#       - name: Install kubectl
#         run: |
#           sudo apt-get update && sudo apt-get install -y apt-transport-https gnupg2 curl
#           curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
#           echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
#           sudo apt-get update
#           sudo apt-get install -y kubectl
#       #  - name: Authenticate with EKS cluster
#       #    id: eks_auth
#       #    uses: aws-actions/amazon-eks-authenticator@v0.5.0
#       #    with:
#       #      aws-region: us-west-2
#       #      cluster-name: eks-cluster-test
#       #      issuer-url: https://oidc.eks.us-west-2.amazonaws.com/id/E0342F2D07A2EBE43028B8F2627AEAD1
#       #      client-id: eks-auth-99

#       - name: Deploy NGINX resources
#         env:
#           AWS_ACCESS_KEY_ID: AKIAQ5ZFAJFAJ66PXGU2
#           AWS_SECRET_ACCESS_KEY: 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
#           AWS_DEFAULT_REGION: us-west-2
#         run: |
#           kubectl get pods
#           kubectl apply -f nginx-pod.yml
#           kubectl apply -f nginx-service.yml
#           kubectl apply -f nginx-replicaset.yml
#           kubectl apply -f nginx-deployment.yml

# #########################################

# name: Deploy to EKS

# on:
#   push:
#     branches:
#       - master

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Configure AWS credentials
#         run: |
#           aws configure set aws_access_key_id AKIAQ5ZFAJFAJ66PXGU2
#           aws configure set aws_secret_access_key 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
#           aws configure set default.region us-west-2
#       - name: Update Kubectl Config
#         run: |
#           aws eks update-kubeconfig --name eks-cluster-test --region us-west-2
#       - name: Install kubectl
#         run: |
#           sudo apt-get update && sudo apt-get install -y apt-transport-https gnupg2 curl
#           curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
#           echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
#           sudo apt-get update
#           sudo apt-get install -y kubectl
#       - name: Deploy NGINX resources
#         run: |
#           aws eks update-kubeconfig --name eks-cluster-test --region us-west-2
#           kubectl config use-context eks-cluster-test
#           kubectl get nodes
#           kubectl apply -f nginx-pod.yml
#           kubectl apply -f nginx-service.yml
#           kubectl apply -f nginx-replicaset.yml
#           kubectl apply -f nginx-deployment.yml

##################################
# name: Deploy to EKS
# on:
#   push:
#     branches:
#       - master
# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Configure AWS credentials
#         run: |
#           sudo apt-get update
#           sudo apt-get install awscli -y

#           aws configure set  aws_access_key_id AKIAQ5ZFAJFAN77HRGME && aws configure set  aws_secret_access_key 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 && aws configure set default.region us-west-2
#       - name: Update kubeconfig
#         run: |
#           sudo --login
#           ###################docker###########################

#           sudo apt-get update
#           sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
#           curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
#           echo \
#             "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
#             $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
#           sudo apt-get update
#           sudo apt-get install -y docker-ce docker-ce-cli containerd.io

#           #################INSTALL K8S###################
#           curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
#           curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
#           echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
#           sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
#           kubectl version --client

#           #############################################################

#           export region_code=us-west-2
#           export cluster_name=eks-cluster-test
#           export account_id=063965251904

#           cluster_endpoint=$(aws eks describe-cluster \
#           --region $region_code \
#           --name $cluster_name \
#           --query "cluster.endpoint" \
#           --output text)

#           certificate_data=$(aws eks describe-cluster \
#           --region $region_code \
#           --name $cluster_name \
#           --query "cluster.certificateAuthority.data" \
#           --output text)

#           mkdir -p ~/.kube

#           export KUBECONFIG=$KUBECONFIG:~/.kube/config

#           export AWS_ACCESS_KEY_ID=AKIAQ5ZFAJFAN77HRGME
#           export AWS_SECRET_ACCESS_KEY=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
#           sudo aws eks update-kubeconfig --name eks-cluster-test --region us-west-2 --kubeconfig ~/.kube

#           kubectl config use-context eks-cluster-test
#           kubectl get nodes
#       - name: Deploy to EKS cluster
#         run: |
#           kubectl apply -f nginx-pod.yml
#           kubectl apply -f nginx-service.yml
#           kubectl apply -f nginx-replicaset.yml
#           kubectl apply -f nginx-deployment.yml

##################################################################

# name: Deploy to EKS
# on:
#   push:
#     branches:
#       - master

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Configure AWS credentials
#         run: |
#           sudo apt-get update
#           sudo apt-get install awscli -y

#           aws configure set aws_access_key_id AKIAQ5ZFAJFAN77HRGME
#           aws configure set aws_secret_access_key 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
#           aws configure set default.region us-west-2

#       - name: Update kubeconfig
#         run: |
#           sudo --login
#           ###################docker###########################

#           sudo apt-get update
#           sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
#           curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
#           echo \
#             "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
#             $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
#           sudo apt-get update
#           sudo apt-get install -y docker-ce docker-ce-cli containerd.io

#           #################INSTALL K8S###################
#           curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
#           curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
#           echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
#           sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
#           kubectl version --client

#           #############################################################

#           export region_code=us-west-2
#           export cluster_name=eks-cluster-test
#           export account_id=063965251904

#           cluster_endpoint=$(aws eks describe-cluster \
#           --region $region_code \
#           --name $cluster_name \
#           --query "cluster.endpoint" \
#           --output text)

#           certificate_data=$(aws eks describe-cluster \
#           --region $region_code \
#           --name $cluster_name \
#           --query "cluster.certificateAuthority.data" \
#           --output text)

#           mkdir -p ~/.kube

#           export KUBECONFIG=$KUBECONFIG:~/.kube/config

#           sudo aws eks update-kubeconfig --name $cluster_name --region $region_code
#           sudo kubectl config use-context $cluster_name
#           sudo kubectl get nodes

#       - name: Deploy to EKS cluster
#         run: |
#           kubectl apply -f nginx-pod.yml
#           kubectl apply -f nginx-service.yml
#           kubectl apply -f nginx-replicaset.yml
#           kubectl apply -f nginx-deployment.yml
################################################

name: deploy to EKS
on:
  push:
    branches: ["master"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: "v1.24.0" # default is latest stable
        id: install
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: AKIAQ5ZFAJFAIJKHNVP3
          aws-secret-access-key: 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
          aws-region: us-west-2

      - name: Install aws-iam-authenticator
        run: |
          sudo curl -o /usr/local/bin/aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.22.0/2021-07-05/bin/linux/amd64/aws-iam-authenticator
          sudo chmod +x /usr/local/bin/aws-iam-authenticator

      - name: Deploy to EKS
        run: |
          aws ec2 describe-instances
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
          echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          kubectl version --client
          aws eks update-kubeconfig --name eks-cluster-test --region us-west-2
          kubectl config current-context
          kubectl apply -k k8s/
          AWS_PROFILE=default kubectl apply -f nginx-pod.yml --kubeconfig /home/runner/.kube/config
